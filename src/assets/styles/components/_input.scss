.input-group {
	--border-width: #{rem(1)};

	display: block;
	list-style: none;
	position: relative;
	width: auto;

	--text-border-color-default: var(--grey-500);
	--text-border-color-disabled: var(--grey-400);
	--text-border-color-hover: var(--blue-500);
	--text-border-color-focus: var(--blue-500);
	--text-border-color-error: var(--red-500);
	--text-border-color-error-hover: var(--red-500);
	--text-border-color-error-focus: var(--red-500);

	--text-value-color-disabled: var(--grey-400);
	--text-value-color-error: var(--red-500);

	--text-background-color-disabled: var(--grey-200);
	--input-group--error-color: var(--red-500);

	--text-default-box-shadow: 0 0 0 var(--border-width) var(--text-border-color-default) inset;
	--text-disabled-box-shadow: 0 0 0 var(--border-width) var(--text-border-color-disabled) inset;
	--text-error-box-shadow: 0 0 0 var(--border-width) var(--text-border-color-error) inset;

	--text-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--text-border-color-focus) inset,
		0 0 0 calc(1 * var(--border-width)) var(--parent-background-color),
		0 0 0 calc(3 * var(--border-width)) var(--text-border-color-focus);
	--text-hover-box-shadow: 0 0 0 calc(2 * var(--border-width)) var(--text-border-color-hover) inset;
	--text-error-hover-box-shadow: 0 0 0 calc(2 * var(--border-width)) var(--text-border-color-error-hover) inset;
	--text-error-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--text-border-color-error-focus) inset,
		0 0 0 calc(1 * var(--border-width)) var(--parent-background-color),
		0 0 0 calc(3 * var(--border-width)) var(--text-border-color-error-focus);

	--checkbox-radio-hover-color: var(--blue-500);
	--checkbox-radio-active-color: var(--blue-150);
	--checkbox-radio-border-color: var(--grey-500);
	--checkbox-radio-checked-background-color: var(--blue-500);
	--checkbox-radio-focus-border-color: var(--blue-500);
	--checkbox-radio-focus-hover-background-color: var(--off-white);

	--checkbox-radio-hover-box-shadow: 0 0 0 calc(1 * var(--border-width)) var(--checkbox-radio-hover-color) inset;
	--checkbox-radio-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--parent-background-color),
		0 0 0 calc(4 * var(--border-width)) var(--checkbox-radio-focus-border-color),
		0 0 0 calc(1 * var(--border-width)) var(--checkbox-radio-focus-border-color) inset;

	--checkbox-checked-hover-box-shadow: 0 0 0 var(--border-width) var(--checkbox-radio-focus-border-color);
	--radio-checked-box-shadow:
		0 0 0 var(--border-width) var(--checkbox-radio-focus-border-color) inset,
		0 0 0 calc(3 * var(--border-width)) var(--parent-background-color) inset;
	--radio-checked-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--parent-background-color),
		0 0 0 calc(4 * var(--border-width)) var(--checkbox-radio-focus-border-color),
		0 0 0 var(--border-width) var(--checkbox-radio-focus-border-color) inset,
		0 0 0 calc(3 * var(--border-width)) var(--parent-background-color) inset;
	--radio-checked-hover-box-shadow:
		0 0 0 calc(1 * var(--border-width)) var(--checkbox-radio-hover-color) inset,
		0 0 0 calc(3 * var(--border-width)) var(--parent-background-color) inset;
}

.input-group--inverse {
	--text-border-color-default: var(--grey-500);
	--text-border-color-disabled: var(--grey-500);
	--text-border-color-hover: var(--blue-300);
	--text-border-color-focus: var(--blue-500);
	--text-border-color-error: var(--red-300);
	--text-border-color-error-hover: var(--red-300);
	--text-border-color-error-focus: var(--red-300);

	--text-value-color-disabled: var(--grey-500);
	--text-value-color-error: var(--red-500);

	--text-background-color-disabled: var(--grey-200);
	--input-group--error-color: var(--red-200);

	--text-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--off-white) inset,
		0 0 0 calc(4 * var(--border-width)) var(--text-border-color-focus) inset;

	--text-error-focus-box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--off-white) inset,
		0 0 0 calc(4 * var(--border-width)) var(--text-border-color-error-hover) inset;

	--checkbox-radio-hover-color: var(--blue-300);
	--checkbox-radio-active-color: var(--blue-400);
	--checkbox-radio-border-color: var(--off-white);
	--checkbox-radio-checked-background-color: var(--off-white);
	--checkbox-radio-focus-border-color: var(--blue-300);
	--checkbox-radio-focus-hover-background-color: default;
}

.input-group + .input-group {
	margin-top: rem(60);
}

.input-group > * + * {
	margin-top: rem(12);
}

label {
	font-family: $font-family-serif;
	font-weight: $font-weight-bold;
	line-height: (24 / 16);
}

.input-group__description {
	font-size: rem(14);
	font-style: italic;
	line-height: (24 / 14);
}

.input-group__error {
	display: flex;
	flex-direction: row;
	font-family: $font-family-sans;
	font-size: rem(14);
	font-weight: $font-weight-semibold;
	line-height: (20 / 14);

	svg {
		margin-right: rem(4);
	}
}

.input-group--error {
	color: var(--input-group--error-color);
}

/*
Text input and text areas.
*/

input:not([type="submit"]):not([type="checkbox"]):not([type="radio"]),
select,
textarea {
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
	border: solid var(--border-width) transparent;
	border-radius: rem(3.5);
	box-shadow: var(--text-default-box-shadow);
	display: block;
	font-family: $font-family-serif;
	font-size: rem(16);
	height: rem(40);
	line-height: (24 / 16);
	max-width: rem(268);
	outline: none;
	padding: rem(10) rem(10) rem(7);
	transition: border 0.1s ease-out, background-color 0.1s ease-out, box-shadow 0.1s ease-out;
	width: 100%;

	@media (prefers-reduced-motion: reduce) {
		transition: none;
	}
}

textarea {
	height: rem(118);
	max-width: rem(367);
	resize: none;
}

select:not([multiple]) {
	background-image: url("../images/chevron-down.svg");
	background-position: calc(100% - #{rem(8)}) center;
	background-repeat: no-repeat;
	background-size: 1.25em;
	line-height: normal;
	padding: rem(6.5) rem(40) rem(6) rem(10);

	&::-ms-expand {
		display: none;
	}

	&::-moz-focus-inner {
		outline: none;
	}

	&:-moz-focusring {
		color: transparent;
		text-shadow: 0 0 0 #000;
	}
}

.input-group--inverse input[type="text"],
.input-group--inverse select:not([multiple]),
.input-group--inverse textarea {
	border-color: var(--parent-background-color);
}

input[type="text"]:hover,
textarea:hover,
select:not([multiple]):hover {
	box-shadow: var(--text-hover-box-shadow);
}

.input-group--error input[type="text"],
.input-group--error select:not([multiple]),
.input-group--error textarea {
	box-shadow: var(--text-error-box-shadow);
	color: var(--text-value-color-error);
}

input[type="text"]:focus,
textarea:focus,
select:not([multiple]):focus,
input[type="text"]:focus:hover,
textarea:focus:hover,
select:focus:hover {
	box-shadow: var(--text-focus-box-shadow);
}

select[disabled] {
	background-image: none;
}

select:not([multiple])[disabled],
input[type="text"][disabled],
textarea[disabled],
input[type="text"][disabled]:hover,
textarea[disabled]:hover,
select:not([multiple])[disabled]:hover {
	background-color: var(--text-background-color-disabled);
	box-shadow: var(--text-disabled-box-shadow);
	color: var(--text-value-color-disabled);
}

.input-group--error input[type="text"]:hover,
.input-group--error textarea:hover,
.input-group--error select:not([multiple]):hover {
	box-shadow: var(--text-error-hover-box-shadow);
}

.input-group--error input[type="text"]:focus,
.input-group--error textarea:focus,
.input-group--error select:not([multiple]):focus {
	box-shadow: var(--text-error-focus-box-shadow);
}

/*
Checkboxes and radios.
*/

input[type="checkbox"],
input[type="radio"] {
	appearance: none;
	margin: 0;
}

[role="checkbox"] + input[type="checkbox"] {
	display: none;
}

label.label--radio,
input[type="radio"] + label,
label.label--checkbox,
input[type="checkbox"] + label
[role="checkbox"] {
	font-weight: $font-weight-normal;
}

input[type="radio"]::before,
input[type="checkbox"]::before,
[role="checkbox"]::before {
	border: rem(1) solid;
	border-color: var(--checkbox-radio-border-color);
	border-radius: rem(3);
	content: "";
	display: block;
	float: left;
	height: rem(18);
	margin: 0 rem(8) rem(-4) 0;
	transition: border 0.1s ease-out, background-color 0.1s ease-out, box-shadow 0.1s ease-out;
	width: rem(18);

	@media (prefers-reduced-motion: reduce) {
		transition: none;
	}
}

input[type="radio"]::before {
	border-radius: 100%;
}

input[type="radio"]::before:focus,
input[type="checkbox"]::before:focus,
[role="checkbox"]::before:focus {
	outline: none;
}

input[type="radio"]:disabled + label,
input[type="checkbox"]:disabled + label {
	color: var(--text-value-color-disabled);
}

input[type="checkbox"]:checked::before,
[role="checkbox"][aria-checked="true"]::before {
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="10.572" height="7.742" viewBox="0 0 10.572 7.742"><path d="M.681 3.812l3.148 2.931L9.864.708" fill="none" stroke="%23f9f9f7" stroke-linejoin="round" class="stroke" stroke-width="2"/></svg>');
}

[role="checkbox"][aria-checked="mixed"]::before {
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 2"><path fill="%23f9f9f7" d="M0,1A1,1,0,0,0,1,2H7A1,1,0,0,0,7,0H1A1,1,0,0,0,0,1Z"/></svg>');
	background-size: rem(10) rem(2.5);
}

input[type="radio"]:hover::before,
input[type="checkbox"]:hover::before,
[role="checkbox"]:hover::before {
	background-color: var(--checkbox-radio-focus-hover-background-color);
	border-color: var(--checkbox-radio-hover-color);
	box-shadow: var(--checkbox-radio-hover-box-shadow);
}

input[type="radio"]:active::before,
input[type="checkbox"]:active::before,
[role="checkbox"]:active::before {
	background-color: var(--checkbox-radio-active-color);
	border-color: var(--checkbox-radio-hover-color);
	box-shadow: var(--checkbox-radio-hover-box-shadow);
}

input[type="radio"]:focus::before,
input[type="checkbox"]:focus::before,
[role="checkbox"]:focus::before {
	border-color: var(--checkbox-radio-focus-border-color);
	box-shadow: var(--checkbox-radio-focus-box-shadow);
}

input[type="checkbox"]:checked::before,
[role="checkbox"][aria-checked="mixed"]::before,
[role="checkbox"][aria-checked="true"]::before {
	background-color: var(--checkbox-radio-checked-background-color);
	background-position: center;
	background-repeat: no-repeat;
	border: rem(1) solid var(--checkbox-radio-checked-background-color);
}

input[type="radio"]:checked::before {
	background: var(--checkbox-radio-checked-background-color);
	border-color: var(--checkbox-radio-focus-border-color);
	box-shadow: var(--radio-checked-box-shadow);
}

input[type="radio"]:disabled::before,
input[type="checkbox"]:disabled::before {
	border-color: var(--text-border-color-disabled);
}

input[type="radio"]:disabled:hover::before,
input[type="checkbox"]:disabled:hover::before,
[role="checkbox"]:disabled:hover::before {
	background: initial;
	box-shadow: none;
}

input[type="radio"]:disabled:active::before,
input[type="checkbox"]:disabled:active::before,
[role="checkbox"]:disabled:active::before {
	background: initial;
	box-shadow: none;
}

input[type="radio"]:checked:hover::before {
	border-color: var(--checkbox-radio-hover-color);
	box-shadow: var(--radio-checked-hover-box-shadow);
}

input[type="radio"]:checked:focus::before {
	box-shadow: var(--radio-checked-focus-box-shadow);
}

.input-group--inverse [role="checkbox"][aria-checked="mixed"]::before {
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 2"><path fill="%23000000" d="M0,1A1,1,0,0,0,1,2H7A1,1,0,0,0,7,0H1A1,1,0,0,0,0,1Z"/></svg>');
}

.input-group--inverse input[type="checkbox"]:checked::before,
.input-group--inverse [role="checkbox"][aria-checked="true"]::before {
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="10.572" height="7.742" viewBox="0 0 10.572 7.742"><path d="M.681 3.812l3.148 2.931L9.864.708" fill="none" stroke="%23000000" stroke-linejoin="round" class="stroke" stroke-width="2"/></svg>');
}

.input-group--inverse input[type="checkbox"]:checked:focus::before,
.input-group--inverse [role="checkbox"][aria-checked="true"]:focus::before {
	box-shadow:
		0 0 0 calc(2 * var(--border-width)) var(--parent-background-color),
		0 0 0 calc(4 * var(--border-width)) var(--checkbox-radio-focus-border-color);
}
